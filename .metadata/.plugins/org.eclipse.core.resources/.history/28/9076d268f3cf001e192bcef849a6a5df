package hibernate_crud_student_app;

import java.util.Scanner;

import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import hibernate.demo.Employee;


public class StudentApp {
	public static Scanner sc=new Scanner(System.in);
	public static void main(String[] args) {
		int choice;
	
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("studentapp");
		EntityManager em=emf.createEntityManager();
		EntityTransaction et=em.getTransaction();
		Student s;
		
		while(true)
		{ 
			System.out.println("press 1 for add Student ");
			System.out.println("press 2 for remove Student");
			System.out.println("press 3 for find Student");
			System.out.println("press 4 for update Student");
			System.out.println("press 5 for failed Students");
		    choice=sc.nextInt();
			sc.nextLine();
			switch(choice)
			{
			case 1:
				System.out.println("enter Student name");
				String name=sc.next();
				System.out.println("enter Student percentage");
				float per=sc.nextFloat();
				System.out.println("enter Student id");
				int id=sc.nextInt();
				sc.nextLine();
				System.out.println("enter Student age");
				int age=sc.nextInt();
				s=new Student(id,name,age,per);
				et.begin();
				
				em.persist(s);
				
				et.commit();
			
				break;
			case 2:
				System.out.println("enter id of the employee you want to remove");
			    int delete=sc.nextInt();
			     s= em.find(Student.class, delete);
			     if(s==null)
			     {
			    	 System.out.println("there is no present any data  of the id "+delete);
			    	 break;
			     }
			     System.out.println(s+"this is your data which you want to remove");
			     et.begin();
			     	em.remove(s);
			     et.commit();
			     System.out.println("data removed successfully ");
			    
			    
				break;
			case 3:
				break;
			case 4:
				break;
			case 5:
				break;
			default:
				break;
			
			}
			
		}
		
	}
	   
		
	

}
